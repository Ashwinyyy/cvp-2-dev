
---

### Prompt: **Processing Drug Reports from S3 Data Buckets**

**Input Configuration:**
- **Input Bucket:** `cvp-2-bucket`
- **Output Bucket:** `cvp-2-output`

---

#### Task Overview
1. **Drug Names Parsing**
   - Read and parse the file `Input_data/Suspected_Product_Brand_Name/drug_names.txt` from the `cvp-2-bucket` S3 bucket.
   - Extract drug names considering the following:
     - Ignore empty lines.
     - Ensure parsing is case-insensitive.

2. **Locate REPORT_IDs**
   - For each extracted drug name, search for corresponding `REPORT_ID` values in the `Input_data/report_id_database/report_drug.txt` file.
   - Collect these `REPORT_IDs` for use in subsequent steps.

3. **Field Mappings and Reference Files**
   - Utilize the following files from `Input_data/report_id_database/` to extract data based on the mappings provided:
     - **`reports.txt`**
     - **`reactions.txt`**
     - **`report_links.txt`**
     - **`report_drug.txt`**
     - **`report_drug_indication.txt`**

---

#### Reference: File Contents for Parsing and Mapping (For Context Only)

**`reports.txt`**  
```
"905905528"$"E2B_05905528"$"2"$"24-JAN-23"$"09-SEP-22"$"2022TUS061423"$"7"$"Spontaneous"$"Déclaration spontanée"$"1"$"Male"$"Masculin"$"27"$"27"$"Years"$"Années"$"07"$"Recovered/resolved"$"Guérison"$"55"$"Kilogram"$"Kilogramme"$"168"$"Centimeter"$"Centimètres"$"01"$"Serious"$"Grave"$"2"$"2"$"2"$"2"$"2"$"1"$"Other health professional"$"Autre professionnel de santé"$"07"$"MAH"$"Fabricant"$"CA-TAKEDA-2022TUS061423"$""$"CA-TAKEDA-2022TUS061423"
```

**`reactions.txt`**  
```
"90590552804"$"905905528"$"1"$"Days"$"Jour(s)"$"Back pain"$"Dorsalgie"$"Musculoskeletal and connective tissue disorders"$"Affections musculosquelettiques et du tissu conjonctif"$"v.27.1"
"90590552801"$"905905528"$""$""$""$"Febrile nonhaemolytic transfusion reaction"$"Réaction non hémolytique fébrile à la transfusion"$"Injury, poisoning and procedural complications"$"Lésions, intoxications et complications d'interventions"$"v.27.1"
...
```

**`report_links.txt`**  
```
"6895302"$"689530"$"Duplicate"$"Doublon"$"E2B_01090862"
```

**`report_drug.txt`**  
```
"690445"$"905905528"$"8777"$"GAMMAGARD LIQUID ALSO KNOW AS IMMUNE GLOBULIN (HUMAN)"$"Suspect"$"Suspect"$"Intravenous (not otherwise specified)"$"Intraveineuse (sans autre précision)"$"30"$"Gram"$"Gramme"$"1"$"1"$"Days"$"Jour(s)"$"1 every 1 Days"$"1 chaque 1 Jour(s)"$"1440"$"Minutes"$"Minute(s)"$"SOLUTION INTRAVENOUS"$"SOLUTION POUR ADMINISTRATION INTRAVEINEUSE"
...
```

**`report_drug_indication.txt`**  
```
"690446"$"905905528"$"8777"$"GAMMAGARD LIQUID ALSO KNOW AS IMMUNE GLOBULIN (HUMAN)"$"Immunodeficiency"$"Déficit immunitaire"
...
```

---

#### Field Mappings

- **`reports.txt`**
  - `Adverse Reaction Report id`: `REPORT_ID` (fields[0])
  - `Adverse Reaction Report Number`: `REPORT_NO` (fields[1])
  -Latest AER Version Number: VERSION_NO (fields[2])
  Initial Received Date: DATINTRECEIVED (fields[4])
  Latest Received Date: DATRECEIVED (fields[3])
  Source of Report: SOURCE_ENG (fields[37])
  Market Authorization Holder AER Number: MAH_NO (fields[5])
  Type of Report: REPORT_TYPE_ENG (fields[7])
  Reporter Type: REPORTER_TYPE_ENG (fields[34])
  Serious report: SERIOUSNESS_ENG (fields[26])
  Death: DEATH (fields[28])
  Disability: DISABILITY (fields[29])
  Congenital Anomaly: CONGENITAL_ANOMALY (fields[30])
  Serious Life Threatening: LIFE_THREATENING (fields[31])
  Hospitalization: HOSP_REQUIRED (fields[32])
  Other Medically Important Conditions: OTHER_MEDICALLY_IMP_COND (fields[33])
  Age: AGE (fields[12])
  Gender: GENDER_ENG (fields[10])
  Height: HEIGHT (fields[22])
  Weight: WEIGHT (fields[19])
  Report Outcome: OUTCOME_ENG (fields[17])

- **`reactions.txt`**
  - `Adverse Reaction Report id`: `REPORT_ID` (fields[1])
  - Adverse Reaction Term(s): REACTION_ENG (fields[3])
  MedDRA Version: VERSION (fields[10])
  Reaction Duration: DURATION (fields[9])

- **`report_links.txt`**
  - `Adverse Reaction Report id`: `REPORT_ID` (fields[1])
  - Record Type: LINK_TYPE_ENG (fields[2])
  Link AER Number: E2B_REPORT_NO (fields[4])

- **`report_drug.txt`**
  - `Adverse Reaction Report id`: `REPORT_ID` (fields[1])
  - Product Description: DRUG_NAME_ENG (fields[3])
  Health Product Role: DRUG_TYPE_ENG (fields[5])
  Dosage Form: DOSE_UNIT_ENG (fields[8])
  Route of Administration: ROUTE_ENG (fields[16])
  Dose: DOSE (fields[7])
  Frequency: FREQ (fields[10])
  Therapy Duration: DURATION (fields[13])

- **`report_drug_indication.txt`**
  - `Adverse Reaction Report id`: `REPORT_ID` (fields[1])
  - Adverse Reaction Report id: REPORT_ID (fields[1])
  Indication(s): INDICATION_ENG (fields[4])
  

---

#### JSON Output Specification
- For each `REPORT_ID`, generate a JSON object structured as follows:
```json
[
    
    {
      "report_id": "{{REPORT_ID}}",
      "report_no": "{{report_no}}",
      "version_no": "{{version_no}}",
      "datintreceived": "{{datintreceived}}",
      "datreceived": "{{datreceived}}",
      "source_eng": "{{source_eng}}",
      "mah_no": "{{mah_no}}",
      "report_type_eng": "{{report_type_eng}}",
      "reporter_type_eng": "{{reporter_type_eng}}",
      "seriousness_eng": "{{seriousness_eng}}",
      "death": "{{death}}",
      "disability": "{{disability}}",
      "congenital_anomaly": "{{congenital_anomaly}}",
      "life_threatening": "{{life_threatening}}",
      "hospitalization": "{{hospitalization}}",
      "other_medically_imp_cond": "{{other_medically_imp_cond}}",
      "age": "{{age}}",
      "gender_eng": "{{gender_eng}}",
      "height": "{{height}}",
      "weight": "{{weight}}",
      "outcome_eng": "{{outcome_eng}}",
      "reaction_eng": "{{reaction_eng}}",
      "version": "{{version}}",
      "duration": "{{duration}}",
      "link_type_eng": "{{link_type_eng}}",
      "e2b_report_no": "{{e2b_report_no}}",
      "drug_name_eng": "{{drug_name_eng}}",
      "drug_type_eng": "{{drug_type_eng}}",
      "dose_unit_eng": "{{dose_unit_eng}}",
      "route_eng": "{{route_eng}}",
      "dose": "{{dose}}",
      "freq": "{{freq}}",
      "therapy_duration": "{{therapy_duration}}",
      "indication_eng": "{{indication_eng}}"
    }
  
  
,
{
"report_id": "{{REPORT_ID}}",
"report_no": "{{report_no}}",
"version_no": "{{version_no}}",
"datintreceived": "{{datintreceived}}",
"datreceived": "{{datreceived}}",
"source_eng": "{{source_eng}}",
"mah_no": "{{mah_no}}",
"report_type_eng": "{{report_type_eng}}",
"reporter_type_eng": "{{reporter_type_eng}}",
"seriousness_eng": "{{seriousness_eng}}",
"death": "{{death}}",
"disability": "{{disability}}",
"congenital_anomaly": "{{congenital_anomaly}}",
"life_threatening": "{{life_threatening}}",
"hospitalization": "{{hospitalization}}",
"other_medically_imp_cond": "{{other_medically_imp_cond}}",
"age": "{{age}}",
"gender_eng": "{{gender_eng}}",
"height": "{{height}}",
"weight": "{{weight}}",
"outcome_eng": "{{outcome_eng}}",
"reaction_eng": "{{reaction_eng}}",
"version": "{{version}}",
"duration": "{{duration}}",
"link_type_eng": "{{link_type_eng}}",
"e2b_report_no": "{{e2b_report_no}}",
"drug_name_eng": "{{drug_name_eng}}",
"drug_type_eng": "{{drug_type_eng}}",
"dose_unit_eng": "{{dose_unit_eng}}",
"route_eng": "{{route_eng}}",
"dose": "{{dose}}",
"freq": "{{freq}}",
"therapy_duration": "{{therapy_duration}}",
"indication_eng": "{{indication_eng}}"
}


....
]	
```
- Save the output as a JSON file in the `cvp-2-output` S3 bucket.

---

#### Guidelines
1. **Parsing & Tolerance:**
   - Ignore empty lines and trim whitespace during parsing.
   - Ensure the process is case-insensitive.

2. **Error Handling:**
   - Log missing `REPORT_IDs` or mismatched data for review.
   - Skip invalid or corrupted lines gracefully.

3. **Output Validation:**
   - Validate JSON structure against the schema.
   - Verify completeness of extracted fields.

---

### Objective
Automate the workflow to achieve efficient, accurate parsing, searching, and mapping of data while ensuring structured JSON outputs. This process should be repeatable within a Python-based script or related environment.

---

This version includes the provided reference content for each file, ensuring it is clear that the content is for context and not meant for hardcoded Python code generation. Let me know if additional details are needed!